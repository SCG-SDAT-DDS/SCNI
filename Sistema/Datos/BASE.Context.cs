//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Contexto : DbContext
    {
        public Contexto()
            : base("name=Contexto")
        {
    		this.Configuration.ValidateOnSaveEnabled = false;
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Colonia> Colonia { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Movmiento> Movmiento { get; set; }
        public virtual DbSet<Municipio> Municipio { get; set; }
        public virtual DbSet<Puesto> Puesto { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<SolicitudContrasena> SolicitudContrasena { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<Entidad> Entidad { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Lote> Lotes { get; set; }
        public virtual DbSet<Folio> Folios { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioCertificado> UsuarioCertificado { get; set; }
        public virtual DbSet<Firma> Firmas { get; set; }
        public virtual DbSet<Titulo> Titulos { get; set; }
        public virtual DbSet<Plantilla> Plantillas { get; set; }
        public virtual DbSet<PaseCaja> PaseCaja { get; set; }
        public virtual DbSet<Solicitud> Solicitud { get; set; }
        public virtual DbSet<Carta> Cartas { get; set; }
        public virtual DbSet<Precio> Precio { get; set; }
        public virtual DbSet<Sancion> Sancion { get; set; }
    
        public virtual ObjectResult<BuscarOpcionMenuAndOpcionesMenuInferiores_Result> BuscarOpcionMenuAndOpcionesMenuInferiores(Nullable<int> menuID)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarOpcionMenuAndOpcionesMenuInferiores_Result>("BuscarOpcionMenuAndOpcionesMenuInferiores", menuIDParameter);
        }
    
        public virtual ObjectResult<BuscarOpcionMenuAndOpcionesMenuSuperiores_Result> BuscarOpcionMenuAndOpcionesMenuSuperiores(Nullable<int> menuID)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarOpcionMenuAndOpcionesMenuSuperiores_Result>("BuscarOpcionMenuAndOpcionesMenuSuperiores", menuIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CopiarMenuDeRolEnEmpleado(Nullable<int> iDUsuario, Nullable<int> iDRol)
        {
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            var iDRolParameter = iDRol.HasValue ?
                new ObjectParameter("IDRol", iDRol) :
                new ObjectParameter("IDRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CopiarMenuDeRolEnEmpleado", iDUsuarioParameter, iDRolParameter);
        }
    }
}
